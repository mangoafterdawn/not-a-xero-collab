<Mods LoadCommand = "%xero(function(self)
	function funcQ(t)
		local quad
		func {t[1], function()
			quad = table.remove(spritepool)
			if not quad then SCREENMAN:SystemMessage('out') return end
			quad:hidden(0)
			t[3](quad)
		end}
		if t[4] then
			func{t[1], t[2], linear, 0, 1, function(p) t[4](quad, p) end}
		end
		func {t[1] + t[2], function()
			if not quad then return end
			quad:hidden(1)
			quad:x(scx)
			quad:y(scy)
			quad:cropleft(0)
			quad:cropright(0)
			quad:croptop(0)
			quad:cropbottom(0)
			quad:rotationz(0)
			quad:diffuse(1, 1, 1, 1)
			quad:blend('normal')
			table.insert(spritepool, quad)
		end}
		return funcQ
	end

	funcQ {0, 27.5, function(quad)
		print(quad)
		quad:diffusealpha(0.5)
		quad:rotationz(2)
	end}
	{0, 27.5, function(quad)
		print(quad)
		quad:blend('invertdest')
		quad:y(scy+5)
		quad:rotationz(-1)
	end}

	alias {'confusionzoffset', 'confusionoffset'}

	set {0,
		100, 'stealth',
		100, 'dark',
		-100, 'invert',
		100, 'flip',
		100, 'reverse',
		314, 'confusionoffset',
		-180, 'proxyrotz',
	}

	add {0, 0, instant, -128, 'xpos', plr=1}
	add {0, 0, instant, 128, 'xpos', plr=2}

	ease {0, 27.5, bell, -100, 'tiny0'}
	ease {0, 26.5, bell, -100, 'tiny1'}
	ease {0, 25.5, bell, -100, 'tiny2'}
	ease {0, 24.5, bell, -100, 'tiny3'}

	ease {0, 27.5, inOutQuad, 0, 'confusionoffset', 0, 'proxyrotz'}
	ease {0, 27.5, inOutQuad, 0, 'reverse'}

	local pn = 1
	for i, v in {
		{0, 0},
		{1.5, 3},
		{2.5, 2},
		{3, 1},
		{13.5, 3},
		{14, 1},
		{15.5, 2},
		{16.5, 3},
		{17, 1},
		{18.5, 0},
		{19.5, 2},
		{20.25, 1},
		{21, 0},
		{22, 2},
		{22.5, 3},
		{23.25, 0},
		{24, 1},
		{25.5, 1},
		{27, 3},
	} do
		ease {v[1], 4, pop, -30, 'dark'..v[2], -100, 'stealth'..v[2], plr = pn}
		pn = 3 - pn
	end
	reset {25, 4, inOutQuad}

end)"
	Type = "ActorFrame"
><children>
</children></Mods>
